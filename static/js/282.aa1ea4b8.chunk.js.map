{"version":3,"file":"static/js/282.aa1ea4b8.chunk.js","mappings":"sQA6BA,EA3BkB,SAAC,GAAiB,IAAhBA,EAAe,EAAfA,SAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,kBAAMH,SAPa,SAAAI,GACnBA,EAAEC,iBACFF,EAASD,EAAMI,cAAcC,QAC7BP,EAASE,GACTC,EAAS,GACV,EAEC,WACE,kBACCK,KAAK,SACJC,KAAK,OACLC,MAAOR,EACPS,YAAY,gBACZC,UAAQ,EACRC,WAAS,EACTC,aAAa,MACbC,SAnBc,SAAAX,GAClBD,EAASC,EAAEY,cAAcN,MAC1B,KAmBG,mBAAQD,KAAK,SAAb,sBAGL,ECdD,EAbkB,SAAC,GAA0B,IAAxBQ,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,wBACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFID,EADC,KASjB,ECwBD,EA7Be,WACb,OAAwCM,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4B3B,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeY,EAAf,KACMX,GAAWY,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACR7B,EAAK,UAAGyB,EAAaK,IAAI,gBAApB,QAAgC,GACrCC,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAkBhC,GAFlB,OAEbiC,EAFa,OAGnBN,EAAUM,EAAKC,SAHI,gDAKnBC,QAAQC,IAAR,MACAT,EAAU,IANS,yDAAH,qDASpBI,GACD,GAAE,CAACN,IAKJ,OACE,4BACE,SAAC,EAAD,CAAW3B,SALM,SAAAE,GACnB0B,EAAgB,CAAE1B,MAAAA,GACnB,KAIG,SAAC,EAAD,CAAWe,OAAQA,EAAQC,SAAUA,MAG1C,C,6LClCDqB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAmB,mCAAG,6GAEJF,EAAAA,EAAAA,IAAA,sBAFI,cAErBG,EAFqB,yBAGpBA,EAASP,MAHW,gCAIbE,QAAQC,IAAR,MAJa,yDAAH,qDAOnBJ,EAAiB,mCAAG,WAAOhC,GAAP,gGAEFqC,EAAAA,EAAAA,IAAA,8BAAiCrC,IAF/B,cAEnBwC,EAFmB,yBAGlBA,EAASP,MAHS,gCAIXE,QAAQC,IAAR,MAJW,yDAAH,sDAOjBK,EAAiB,mCAAG,WAAOC,GAAP,gGAEFL,EAAAA,EAAAA,IAAA,iBAAoBK,IAFlB,cAEnBF,EAFmB,yBAGlBA,EAASP,MAHS,gCAIXE,QAAQC,IAAR,MAJW,yDAAH,sDAMjBO,EAAS,mCAAG,WAAMD,GAAN,gGAEEL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aAFF,cAEfE,EAFe,yBAGdA,EAASX,MAHK,gCAKrBE,QAAQC,IAAI,KAAMS,SALG,yDAAH,sDASTC,EAAW,mCAAG,WAAMJ,GAAN,gGAEAL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aAFA,cAEjBE,EAFiB,yBAGhBA,EAASX,MAHO,gCAKvBE,QAAQC,IAAI,KAAMS,SALK,yDAAH,qD","sources":["components/SearchBox.jsx","components/MovieList.jsx","pages/Movies.jsx","service/Api.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst SearchBox = ({onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const changeInput = e => {\n    setQuery(e.currentTarget.value);\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(query.toLowerCase().trim());\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n       name=\"search\"\n        type=\"text\"\n        value={query}\n        placeholder=\"Search movies\"\n        required\n        autoFocus\n        autoComplete=\"off\"\n        onChange={changeInput}\n      />\n      <button type='submit'>Search</button>\n    </form>\n  );\n};\nexport default SearchBox;","import { Link } from 'react-router-dom';\nconst MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n","import { useLocation, useSearchParams} from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { fetchSearchMovies } from 'service/Api';\nimport SearchBox from 'components/SearchBox';\nimport MovieList from 'components/MovieList';\n\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    const getSearchMovie = async () => {\n      try {\n        const data = await fetchSearchMovies(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error)\n        setMovies([]);\n      }\n    }\n    getSearchMovie();\n  }, [searchParams]);\n  \n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n  return (\n    <div>\n      <SearchBox onSubmit={handleSubmit} />\n      <MovieList movies={movies} location={location} />\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'adda9a4c76497ae7ac6c1263f748732e';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const responce = await axios.get(`trending/movie/day`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchSearchMovies = async (query) => {\n    try {\n        const responce = await axios.get(`/search/movie?query=${query}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const responce = await axios.get(`/movie/${movieId}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReview = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n"],"names":["onSubmit","useState","query","setQuery","e","preventDefault","toLowerCase","trim","name","type","value","placeholder","required","autoFocus","autoComplete","onChange","currentTarget","movies","location","map","id","title","Link","to","state","from","useSearchParams","searchParams","setSearchParams","setMovies","useLocation","useEffect","get","getSearchMovie","fetchSearchMovies","data","results","console","log","axios","api_key","fetchTrendingMovies","responce","fetchMovieDetails","movieId","fetchCast","response","message","fetchReview"],"sourceRoot":""}