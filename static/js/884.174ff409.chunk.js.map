{"version":3,"file":"static/js/884.174ff409.chunk.js","mappings":"gOAqDA,UAjDqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAE3DC,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CAGA,IAAMY,EAAe,mCAAG,WAAMZ,GAAN,iGAEDa,EAAAA,EAAAA,IAAkBb,GAFjB,OAEdc,EAFc,OAGpBV,EAASU,GAHW,gDAKpBC,QAAQC,IAAR,MALoB,yDAAH,sDAQrBJ,EAAgBZ,EATf,CAUF,GAAE,CAACA,IACJ,IAAQiB,EAAuDd,EAAvDc,MAAOC,EAAgDf,EAAhDe,aAAcC,EAAkChB,EAAlCgB,SAAUC,EAAwBjB,EAAxBiB,OAAQC,EAAgBlB,EAAhBkB,YAC/C,OACE,iCACE,SAAC,EAAAC,KAAD,CAAMC,GAAIhB,EAAoBiB,QAA9B,sBACA,gBAAKC,IAAG,yCAAoCJ,GAAeK,IAAKT,KAChE,wBAAKA,KACL,uCAAeU,KAAKC,MAAMV,GAA1B,QACA,sCACA,uBAAIC,KACJ,mCACCC,GAAUA,EAAOS,OAAS,IACzB,uBAAIT,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAE3C,oDACA,2BACE,yBACE,SAAC,EAAAX,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,2BAGJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,6LCjDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAmB,mCAAG,6GAEJF,EAAAA,EAAAA,IAAA,sBAFI,cAErBG,EAFqB,yBAGpBA,EAASzB,MAHW,gCAIbC,QAAQC,IAAR,MAJa,yDAAH,qDAOnBwB,EAAiB,mCAAG,WAAOC,GAAP,gGAEFL,EAAAA,EAAAA,IAAA,8BAAiCK,IAF/B,cAEnBF,EAFmB,yBAGlBA,EAASzB,MAHS,gCAIXC,QAAQC,IAAR,MAJW,yDAAH,sDAOjBH,EAAiB,mCAAG,WAAOb,GAAP,gGAEFoC,EAAAA,EAAAA,IAAA,iBAAoBpC,IAFlB,cAEnBuC,EAFmB,yBAGlBA,EAASzB,MAHS,gCAIXC,QAAQC,IAAR,MAJW,yDAAH,sDAMjB0B,EAAS,mCAAG,WAAM1C,GAAN,gGAEEoC,EAAAA,EAAAA,IAAA,iBAAoBpC,EAApB,aAFF,cAEf2C,EAFe,yBAGdA,EAAS7B,MAHK,gCAKrBC,QAAQC,IAAI,KAAM4B,SALG,yDAAH,sDASTC,EAAW,mCAAG,WAAM7C,GAAN,gGAEAoC,EAAAA,EAAAA,IAAA,iBAAoBpC,EAApB,aAFA,cAEjB2C,EAFiB,yBAGhBA,EAAS7B,MAHO,gCAKvBC,QAAQC,IAAI,KAAM4B,SALK,yDAAH,qD","sources":["pages/MovieDetails.jsx","service/Api.jsx"],"sourcesContent":["import { Suspense, useRef, useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/Api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getMovieDetails = async movieId => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieDetails(movieId);\n  }, [movieId]);\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n      <h2>{title}</h2>\n      <p>User score {Math.round(vote_average)}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      {genres && genres.length > 0 && (\n        <p>{genres.map(genre => genre.name).join(' ')}</p>\n      )}\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'adda9a4c76497ae7ac6c1263f748732e';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const responce = await axios.get(`trending/movie/day`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchSearchMovies = async (query) => {\n    try {\n        const responce = await axios.get(`/search/movie?query=${query}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const responce = await axios.get(`/movie/${movieId}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReview = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieDetails","fetchMovieDetails","data","console","log","title","vote_average","overview","genres","poster_path","Link","to","current","src","alt","Math","round","length","map","genre","name","join","Suspense","fallback","axios","api_key","fetchTrendingMovies","responce","fetchSearchMovies","query","fetchCast","response","message","fetchReview"],"sourceRoot":""}