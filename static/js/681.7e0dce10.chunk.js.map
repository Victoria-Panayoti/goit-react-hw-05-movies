{"version":3,"file":"static/js/681.7e0dce10.chunk.js","mappings":"+MAIQA,EAAcC,EAAQ,IAAtBD,UAgCR,UA9BgB,WACd,IAAQE,EAAYF,IAAZE,QACR,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAS,mCAAG,WAAML,GAAN,iGAEKM,EAAAA,EAAAA,IAAYN,GAFjB,OAERO,EAFQ,OAGdJ,EAAUI,EAAKC,SAHD,gDAKdC,QAAQC,IAAR,MALc,yDAAH,sDAQfL,EAAUL,EATU,CAUrB,GAAE,CAACA,KAGF,0BACE,wBACGE,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADC,OASnB,C,6LChCDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAmB,mCAAG,6GAEJF,EAAAA,EAAAA,IAAA,sBAFI,cAErBG,EAFqB,yBAGpBA,EAASX,MAHW,gCAIbE,QAAQC,IAAR,MAJa,yDAAH,qDAOnBS,EAAiB,mCAAG,WAAOC,GAAP,gGAEFL,EAAAA,EAAAA,IAAA,8BAAiCK,IAF/B,cAEnBF,EAFmB,yBAGlBA,EAASX,MAHS,gCAIXE,QAAQC,IAAR,MAJW,yDAAH,sDAOjBW,EAAiB,mCAAG,WAAOrB,GAAP,gGAEFe,EAAAA,EAAAA,IAAA,iBAAoBf,IAFlB,cAEnBkB,EAFmB,yBAGlBA,EAASX,MAHS,gCAIXE,QAAQC,IAAR,MAJW,yDAAH,sDAMjBY,EAAS,mCAAG,WAAMtB,GAAN,gGAEEe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,aAFF,cAEfuB,EAFe,yBAGdA,EAAShB,MAHK,gCAKrBE,QAAQC,IAAI,KAAMc,SALG,yDAAH,sDASTlB,EAAW,mCAAG,WAAMN,GAAN,gGAEAe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,aAFA,cAEjBuB,EAFiB,yBAGhBA,EAAShB,MAHO,gCAKvBE,QAAQC,IAAI,KAAMc,SALK,yDAAH,qD","sources":["components/Reviews.jsx","service/Api.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { fetchReview } from 'service/Api';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  useEffect(() => {\n    if (!movieId) return;\n    const getReview = async movieId => {\n      try {\n        const data = await fetchReview(movieId);\n        setReview(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getReview(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {review.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'adda9a4c76497ae7ac6c1263f748732e';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const responce = await axios.get(`trending/movie/day`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchSearchMovies = async (query) => {\n    try {\n        const responce = await axios.get(`/search/movie?query=${query}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const responce = await axios.get(`/movie/${movieId}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReview = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n"],"names":["useParams","require","movieId","useState","review","setReview","useEffect","getReview","fetchReview","data","results","console","log","map","id","author","content","axios","api_key","fetchTrendingMovies","responce","fetchSearchMovies","query","fetchMovieDetails","fetchCast","response","message"],"sourceRoot":""}