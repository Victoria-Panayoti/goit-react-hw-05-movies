{"version":3,"file":"static/js/282.358b339c.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchBox.jsx","components/MovieList.jsx","pages/Movies.jsx","service/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const LoaderBox = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderBox>\n  );\n};","import { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SearchBox = ({onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const changeInput = e => {\n    setQuery(e.currentTarget.value);\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(query.toLowerCase().trim());\n      if (query === '') {\n      return toast.warn('input value can not be empty');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n       name=\"search\"\n        type=\"text\"\n        value={query}\n        placeholder=\"Search movies\"\n        required\n        autoFocus\n        autoComplete=\"off\"\n        onChange={changeInput}\n      />\n      <button type='submit'>Search</button>\n    </form>\n  );\n};\nexport default SearchBox;","import { Link } from 'react-router-dom';\nconst MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n","import { useLocation, useSearchParams} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fetchSearchMovies } from 'service/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport SearchBox from 'components/SearchBox';\nimport MovieList from 'components/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n    setIsLoading(true);\n    const getSearchMovie = async () => {\n      try {\n        const data = await fetchSearchMovies(query);\n        if (data.results === 0) return;\n        setMovies(data.results);\n      } catch (error) {\n        toast.error('Smthg went wrong, we re so sorry.')\n        setMovies([]);\n      } finally{setIsLoading(false)}\n    }\n    getSearchMovie();\n  }, [searchParams]);\n  \n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n  return (\n    <div>\n      <SearchBox onSubmit={handleSubmit} />\n      {isLoading&&<Loader/>}\n      <MovieList movies={movies} location={location} />\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'adda9a4c76497ae7ac6c1263f748732e';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const responce = await axios.get(`trending/movie/day`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchSearchMovies = async (query) => {\n    try {\n        const responce = await axios.get(`/search/movie?query=${query}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    try {\n        const responce = await axios.get(`/movie/${movieId}`);\n        return responce.data;\n    } catch (error) { console.log(error); }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReview = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n"],"names":["LoaderBox","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","onSubmit","useState","query","setQuery","e","preventDefault","toLowerCase","trim","toast","name","type","value","placeholder","required","autoFocus","autoComplete","onChange","currentTarget","movies","location","map","id","title","Link","to","state","from","useSearchParams","searchParams","setSearchParams","setMovies","isLoading","setIsLoading","useLocation","useEffect","get","getSearchMovie","fetchSearchMovies","data","results","axios","api_key","fetchTrendingMovies","responce","console","log","fetchMovieDetails","movieId","fetchCast","response","message","fetchReview"],"sourceRoot":""}